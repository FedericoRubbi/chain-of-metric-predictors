# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Machine Learning specific
# Model checkpoints and weights
*.pt
*.pth
*.pkl
*.pickle
*.h5
*.hdf5
*.ckpt
*.safetensors

# Training logs and outputs
runs/
background_runs/
logs/
tensorboard_logs/
wandb/
mlruns/

# Dataset files (keep structure but ignore large data files)
data/*/
!data/*/__init__.py
!data/*.py
# Keep small config files but ignore large datasets
data/*.tar.gz
data/*.zip
data/*.npz
data/*.npy
data/*.h5
data/*.hdf5

# Artifacts and generated files
artifacts/
*.npy
*.npz

# Visualization outputs
*.png
*.jpg
*.jpeg
*.gif
*.svg
*.pdf
*.eps

# Results and reports
plots/
results/
reports/
outputs/
test_results.json
class_report.json
plot_*.png
configs/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.bak
*.backup
*.orig

# Configuration files with sensitive data
config_local.yaml
secrets.yaml
.secrets

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# PyTorch specific
*.pth
*.pt
checkpoints/

# Weights & Biases
wandb/

# MLflow
mlruns/

# DVC
.dvc/
.dvcignore

# Hydra
outputs/
.hydra/

# Optuna
optuna.db

# Ray Tune
ray_results/

# Comet ML
.comet/

# Neptune
.neptune/

# TensorBoard
tensorboard_logs/

# Large files that shouldn't be in git
*.bin
*.safetensors
*.gguf

# Local environment variables
.env.local
.env.development.local
.env.test.local
.env.production.local

# Backup files
*.bak
*.backup
*.old

# Log files
*.log
logs/

# Cache directories
.cache/
__pycache__/
.pytest_cache/
.mypy_cache/

# Profiling data
*.prof
*.lprof

# Memory dumps
*.dmp
*.hprof

# Coverage reports
htmlcov/
.coverage
coverage.xml

# Documentation builds
docs/_build/
site/

# LaTeX files
*.aux
*.bbl
*.bcf
*.blg
*.fdb_latexmk
*.fls
*.log
*.out
*.run.xml
*.synctex.gz
*.toc
*.lof
*.lot
*.idx
*.ind
*.ilg
*.acn
*.acr
*.alg
*.glg
*.glo
*.gls
*.ist
*.lol
*.nav
*.snm
*.vrb
*.xdv
*.dvi
*.ps
*.eps
*.figlist
*.makefile
*.fls
*.fdb_latexmk
*.auxlock
*.synctex(busy)
*.synctex.gz(busy)

# Package files
*.egg-info/
dist/
build/

# Virtual environments (already covered above but being explicit)
venv/
env/
.venv/
.env/
